% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/div.R
\name{clean_div_tags}
\alias{clean_div_tags}
\title{Clean the div tags from an xml document}
\usage{
clean_div_tags(body)
}
\arguments{
\item{body}{an xml document}
}
\value{
an xml document
}
\description{
Clean the div tags from an xml document
}
\details{
Commonmark knows what raw HTML looks like and will read it in as an HTML
block, escaping the tag. it does this for every HTML tag that is preceded by
a blank line, so this: \verb{<div class='hello'>\\n\\n</div>} becomes two html_block
elements\preformatted{<html_block>
  &lt;div class='hello'&gt;\\n
</html_block>
<html_block>
  &lt;/div&gt;\\n
</html_block>
}

However, if an element is not preceded by a non-html element, it becomes
part of that html element. So this \verb{<div class='hello'>\\n</div>} becomes a
single html_block element:\preformatted{<html_block>
  &lt;div class='hello'&gt;\\n&lt;/div&gt;\\n
</html_block>
}

Sometimes, this process can gobble up text that is markdown instead of HTML,

This function will find multiple tags in HTML blocks and separates them into
different blocks.
}
\examples{
txt <- " 
<div class='challenge'>
## Challenge

do that challenging thing.

```{r}
cat('it might be challenging to do this')
```
<div class='solution'>
```{r}
It's not that challenging
```
</div>
<div class='solution'>
We just have to try harder and use `<div>` tags

```{r}
cat('better faster stronger with <div>')
```
<img src='https://carpentries.org/logo.svg'/>

</div>
</div>

<div class='good'>

## Good divs

</div>

"
library(purrr)
library(xml2)

f <- tempfile()
writeLines(txt, f)
ex <- tinkr::to_xml(f)
xml2::xml_find_all(ex$body, ".//d1:html_block[contains(text(), 'div')]")
pegboard:::clean_div_tags(ex$body)
xml2::xml_find_all(ex$body, ".//d1:html_block[contains(text(), 'div')]")
pegboard:::label_div_tags(ex$body)
xml2::xml_find_all(ex$body, ".//d1:html_block[contains(text(), 'div')]")
}
\seealso{
\code{\link[=get_divs]{get_divs()}} for finding labelled tags,
\code{\link[=find_between_tags]{find_between_tags()}} to extract things between the tags,
\code{\link[=label_div_tags]{label_div_tags()}} for labelling div tags,
\code{\link[=clean_div_tags]{clean_div_tags()}} for cleaning cluttered div tags,
\code{\link[=replace_with_div]{replace_with_div()}} for replacing blockquotes with div tags
\code{\link[=find_div_pairs]{find_div_pairs()}} for connecting open and closing tags
\code{\link[=clean_native_divs]{clean_native_divs()}} for cleaning cluttered pandoc div tags
}
\keyword{internal}
