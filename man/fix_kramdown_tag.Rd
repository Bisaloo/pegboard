% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kramdown_tags.R
\name{fix_kramdown_tag}
\alias{fix_kramdown_tag}
\title{Place kramdown tags in the correct part of the document}
\usage{
fix_kramdown_tag(para)
}
\arguments{
\item{para}{a paragraph text node containing the kramdown tags}
}
\value{
the modified paragraph text node
}
\description{
Kramdown is a bit weird in that it uses tags that trail elements like code
blocks or block quotes. If these follow block quotes, commonmark will parse
them being part of that block quote. This is not problematic per-se until you
run into a common situation in the Carpentries' curriculum: nested block
quotes
}
\details{
\preformatted{> # Challenge 1
>
> Some text here
>
> > # Solution 1
> >
> > ~~~
> > print("hello world!")
> > ~~~
> > \{: .language-pyton\}
> \{: .solution\}
\{: .challenge\}
}

When this is parsed with commonmark, the three tags at the end are parsed as
being part of the 2nd-level block quote:\preformatted{...
> > ~~~
> > \{: .language-pyton\}
> > \{: .solution\}
> > \{: .challenge\}
}

This function will force these text nodes into their respective blocks
}
\note{
There is a better way of doing this by just adding the kramdown tags
as attributes of the blocks and adding a style sheet conditional that looks
for these attributes and appends them to the end of the blocks. The same
could be said for code blocks.
}
\keyword{internal}
