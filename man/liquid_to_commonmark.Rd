% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/liquid_to_commonmark.R
\name{liquid_to_commonmark}
\alias{liquid_to_commonmark}
\title{Convert liquid code blocks to commonmark code blocks}
\usage{
liquid_to_commonmark(block, make_rmd = FALSE)
}
\arguments{
\item{block}{a code block}

\item{make_rmd}{if \code{TRUE}, the language will be wrapped in curly braces to
be evaluated by RMarkdown}
}
\value{
the node, invisibly.
}
\description{
Liquid code blocks are generally codified by
}
\details{
\preformatted{print("code goes " + "here")
}

{: .language-python}

However, there is a simpler syntax that we can use:\if{html}{\out{<div class="python">}}\preformatted{print("code goes " + "here")
}\if{html}{\out{</div>}}

This will take in a code block and convert it so that it will no longer use
the liquid tag (which we have added as a "ktag" attribute for "kramdown" tag)
}
\examples{

frg1 <- Lesson$new(lesson_fragment())
frg2 <- frg1$clone(deep = TRUE)
py1  <- get_code(frg1$episodes[["17-scope.md"]]$body, ".language")
py2  <- get_code(frg2$episodes[["17-scope.md"]]$body, ".language")
py1
invisible(lapply(py1, liquid_to_commonmark, make_rmd = FALSE))
invisible(lapply(py2, liquid_to_commonmark, make_rmd = TRUE))
py1
py2
}
